import { FilterValidator } from './validators/filter-validator';
import { AsyncFilterValidator } from './validators/async-filter-validator';
import { DefaultValueValidator } from './validators/default-value-validator';
import { AsyncDefaultValueValidator } from './validators/async-default-value-validator';
export { validate } from './validator';
export { validate as asyncValidate } from './async-validator';
export declare const filter: typeof FilterValidator.validate;
export declare const asyncFilter: typeof AsyncFilterValidator.validate;
export declare const setDefaultValue: typeof DefaultValueValidator.validate;
export declare const asyncSetDefaultValue: typeof AsyncDefaultValueValidator.validate;
export declare const checkRequiredValue: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const checkArray: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const checkBoolean: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const compare: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const asyncCompare: (value: any, variableName?: any, options?: any) => Promise<string | boolean>;
export declare const checkNumber: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const checkEmail: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const checkInRange: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const asyncCheckInRange: (value: any, variableName?: any, options?: any) => Promise<string | boolean>;
export declare const match: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const checkString: (value: any, variableName?: any, options?: any) => string | boolean;
export declare const checkInteger: (value: any, variableName?: any, options?: any) => any;
export declare const checkId: (value: any, variableName?: any, options?: any) => any;
